// Пример 1. Использование динамических переменных.
#include <iostream>
using namespace std;

/* Глобальные переменные создаются при запуске программы 
и удаляются при её завершении.
  Локальные автоматические переменные создаются в блоке кода 
программы и удаляются, когда этот блок кода завершает работу. 
  Локальные статические переменные создаются перед их первым 
использованием и удаляются при завершении программы.
 Динамические переменные находятся в памяти до тех пор, 
пока не будут удалены явным образом или пока программа не завершит
своё выполнение.
  Динамически выделенная память не имеет области видимости. Однако
сами указатели, содержащие адреса динамической памяти, следуют 
правилам области видимости обычных переменных.
  Удаление  динамической памяти не подразумевает удаление указателя,
связанного с удалённым блоком памяти, и изменение его значения.
  !!!Не следует использовать указатели на память, удалённую 
     операцией delete.
*/

int main(){
   int val1  = 10, val2 = 20;
   int *ptr = new int(val1);
   cout<<"val1 = "<<val1<<endl;		// 10
   cout<<"*ptr = "<<*ptr<< endl;	// 10
   val1 = 5;
   cout<<"val1 = "<<val1<<endl;		// 5
   cout<<"*ptr = "<<*ptr<< endl;	// 10
   *ptr = 7;
   cout<<"val1 = "<<val1<<endl;		// 5
   cout<<"*ptr = "<<*ptr<< endl;	// 7
   delete ptr;				// память надо освободить
   ptr = new int(val2);
   cout<<"val2 = "<<val2<<endl;		// 20
   cout<<"*ptr = "<<*ptr<< endl;	// 20
   delete ptr;				// память надо освободить
}
