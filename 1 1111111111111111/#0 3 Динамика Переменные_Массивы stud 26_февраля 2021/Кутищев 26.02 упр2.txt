#include <iostream>
#include <ctime>
using namespace std;
void removeAscendingChains(int*, int*);
int main(){
    while (true) {
        system("cls");

        int dim;                                         // размер массива
        cout << "Enter integer value: ";
        cin >> dim;                                 // получение от пользователя размера массива

        cout << "Do you want to enter matr?" << endl;      //меню для возможного случайного заполнения матрицы.
        cout << "==========================" << endl;
        cout << "\tyes = 1\t random = 0" << endl;
        bool fl1 = true;
        cin >> fl1;
        int* arr = new int[dim];

        if (fl1) {

            cout << "Enter array:" << endl;
            for (int i = 0; i < dim; i++) {
                // Заполнение массива
                cin >> arr[i];

            }
        }
        else {

            srand(time(NULL));
            
            for (int i = 0; i < dim; i++) {
                // Заполнение массива
                arr[i] = rand() % 10;
            }
        }
        cout << endl;

        cout << "Entered array:" << endl;
        for (int i = 0; i < dim; i++) {
            // вывод
            cout << arr[i] << " ";

        }


        removeAscendingChains(arr, &dim);

        cout << endl;
        cout << "Changed array:" << endl;

        for (int i = 0; i < dim; i++) {
            // вывод
            cout << arr[i] << " ";

        }
        delete[] arr; // очистка памяти
        cout << endl;
        cout << "======================" << endl;
        cout << "|  want to continue? |" << endl;
        cout << "|  1 = yes, 0 = no   |" << endl;
        cout << "======================" << endl;        //простое меню для удобства
        int fl = 1;
        cin >> fl;
        if (!fl) { cout << "Good bye!"; break; }
    }
    
    
    return 0;
}

void removeAscendingChains(int* arr, int* dim) {       //удалить возрастающие цепочки, функция принимает указатель  и размер массива
    
    for (int i = 0; i < *dim - 1; i++) {
        
        if (arr[i] == arr[i + 1]) {                  //находим одинаковые элементы
            for (int j = i + 1; j < *dim - 1; j++) { //удаляем из массива
                arr[j] = arr[j + 1];
                
            }
            (*dim)--;
            i--;
                                                 //так как нужно сравнить с прежним числом
       }

    }

}