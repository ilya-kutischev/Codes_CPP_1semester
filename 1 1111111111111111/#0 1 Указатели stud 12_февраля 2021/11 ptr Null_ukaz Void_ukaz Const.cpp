// Пример 11. Нулевые указатели. Указатели на тип void.
// Константные указатели. Указатель на константу.
// Константный указатель на константу.
#include<iostream>
using namespace std;

int main() {
// Указателю можно присвоить нулевой адрес,
// единственный адрес, к которому нет доступа.
// Нулевой указатель не адресует достоверных данных.
// Значение нулевого указателя равно нулю
      int* qtr = 0;
//    int* qtr = NULL;		// NULL -- стандартная константа

// Указатель на void адресует данные неопределённого типа, 
// и может быть нулевым.
// Указатель на void нельзя разыменовать до тех пор,
// пока он не будет приведён к конкретному типу. 

    void * qt;
    double f = 12.34;
    qt = &f;
    cout << *(double*)qt << endl;		// 12.34

// Выделение цифр числа, используя указатель на тип void 			
    long a = 0x12345678;
    cout << "a = " << hex<< a << endl;
    char ch = 'x';
    cout << ch << ' ' << int(ch) << endl;   	 // x  78
    qt = &a;
    cout << int(*(char*)qt) << endl;        	 // 78
    cout << *(short*)qt << endl;            	 // 5678
    cout << *(int*)qt << endl;              	 // 12345678

// Константный (неизменяемый) указатель
    int x = 15, k = 10;
    int* const ptr = &x;			// const-указатель ptr
//  ptr = &k;					// Нельзя!
    *ptr = 7;					// Можно!
    cout << x << "   " << *ptr << endl;		// 7   7

// Указатель на константу
    x = 45;
    const int* pt = &x;				// указатель на константу
// *pt = 35;					// Нельзя!
    x = 15;					// Можно!
    cout << x << "   " << *pt << endl;		// 15   15
    int y = 25;		pt = &y;		// Можно
    cout << y << "   " << *pt << endl;		// 25   25

// int* q = pt;
// Нельзя, так как нельзя  преобразовать const int* в тип int

// Константный указатель на константу
    x = 15; k = 10;
    const int* const p = &x;				// const-указатель p на константу
//  p = &k;						// Нельзя!
//  *p = 35;						// Нельзя!
    x = 15;						// Можно!
    cout << "x = " << x << "  *p = " << *p << endl;	// 15 15
}

