/*Составить функцию, которая для двух целых чисел, переданных функции по указателю,
 определяет число, у которого количество максимальных цифр больше,
 и возвращает его адрес в main(). Поиск количества максимальных цифр
в числе следует выполнить за один просмотр числа.
*/
#include <iostream>
using namespace std;
int* KolvoMax(int* x, int* y);			// обозначили функцию
const int DIM = 50;				//massiv с фиксированной размерностью
int main()
{
	setlocale(LC_ALL, "rus");

	int a[DIM], b[DIM], n;								//razmernost
	cout << "Введите размер массива n: ";     cin >> n;
	cout << "Введите массив: ";
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int i = 0; i < n; i += 2) {
		cout << *(KolvoMax(&a[i], &a[i + 1])) << " ";			//выводим верное число
		if (!(KolvoMax(&a[i], &a[i + 1])))
			cout << "ошибка, введите числа заново." << endl;		//вывод ошибки в случае ошибки
	}
	cout << endl;
	for (int i = 0; i < n / 2; i++) {
		b[i] = *(KolvoMax(&a[2 * i], &a[2 * i + 1]));			// сохраняем значения в новый массив и сразу выводим
		cout << b[i]<<" ";
	}
	
}
int* KolvoMax(int* x, int* y) {
	int maxCifra = 0, countx = 0, county = 0, x1 = *x, y1 = *y;
	while (x1) {								//Находим число максимальных цифр в 1 числе
		if (x1 % 10 > maxCifra) { maxCifra = x1 % 10; countx = 1; }
		else if (x1 % 10 == maxCifra) { countx++; }
		x1 /= 10;
	}
	while (y1) {								//Находим число максимальных цифр в 2 числе
		if (y1 % 10 > maxCifra) { maxCifra = y1 % 10; county = 1; }
		else if (y1 % 10 == maxCifra) { county++; }
		y1 /= 10;
	}
	if (countx > county)return x;					//сравниваем и возвращаем адрес, если количество 
	else if (countx < county) return y;				//совпало то возвращаем 0- ошибка
	else return 0;
}
