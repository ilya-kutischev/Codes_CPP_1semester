// Пример 1. Определение структуры, структурной переменной.
// Доступ к полям. Инициализация полей структуры.
// Операции над структурными переменными.

/*  Структура – это тип пользователя, объединяющий под одним именем
    данные одного или разных типов, называемые полями (элементами) 
    структуры. В качестве полей могут быть переменные простых типов, 
    массивы, другие структуры, указатели и т.д. Структуры позволяют 
    сгруппировать данные, объединяемые каким-либо общим понятием.
*/
#include <iostream>
using namespace std;
struct Date {				// Date – имя нового типа пользователя
	char name[10];			// поле name
	int year;			// поле year
	int month;			// поле month
};
int main() {
	bool fl;
	Date st1;				// переменная st1 типа Date
	cout << "Enter name:  ";
	cin >> st1.name;			// ввести значение поля с клавиатуры
	st1.year = 2000;			// присвоить значение
	st1.month = 11;
	cout << "st1:   " << st1.name << "  " << st1.year << "  " << st1.month << endl;
	Date st2 = { "Ivanov", 1999, 11 };				// явная инициализация
	cout << "st2:   " << st2.name << "  " << st2.year << "  " << st2.month << endl;

	st2 = st1;		// операция присваивания. Один тип у структур!!!
				// все поля st1 побитово копируются в st2
	cout << "st2:   " << st2.name << "  " << st2.year << "  " << st2.month << endl;

	// if(st1 == st2) оператор;		// Нельзя – ошибка компиляции!
	if((st1.year == st2.year) && (st1.month == st2.month)) fl = true;
	else fl = false;
	cout << "fl = " << fl << endl;
}

