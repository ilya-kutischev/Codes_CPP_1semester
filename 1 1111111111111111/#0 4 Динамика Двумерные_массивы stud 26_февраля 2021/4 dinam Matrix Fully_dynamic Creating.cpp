Пример 4 Создание и удаление двумерного динамического массива.
/*  Основной способ работы с динамическими матрицами базируется на 
использовании понятий указатель  на указатель и массив указателей. 
   Пусть, например, требуется создать динамическую матрицу целых чисел
из n строк и m столбцов. Для этого сначала надо создать одномерный
массив из n указателей и его адрес запомнить в переменной ptr,
объявленной как указатель на указатель.
   Далее в цикле следует выделить память под m элементов каждой строки
*/
/*  Под обычный двумерный массив из n строк и m столбцов при его
объявлении выделяется сплошной участок памяти байтов, равный n*m.
   Для такого же динамического массива выделенная память не представляет
собой сплошной участок, так как она выделяется с помощью нескольких операций new.
*/

#include <iostream>
using namespace std;
int main(){
	int n, m;
	cout << "Enter n, m:  ";
	cin >> n >> m;			// n – число строк, m – число столбцов
	int** ptr;				// ptr – указатель на указатель
	ptr = new int* [n]; 			// массив указателей на строки
	for(int i = 0; i < n; i++)		// выделение памяти для каждой строки
	    ptr[i] = new int[m];
	ptr[0][0] = 55;				// присвоили ptr[0][0] значение 55
	cout << " ptr = " << ptr << " *ptr = " << *ptr << '\n';
	cout << " **ptr = " << **ptr << '\n';
        cout << " &ptr[0] = " << &ptr[0] <<'\n';
	cout << " ptr[0] = " << ptr[0] <<'\n';
	cout << " &ptr[0][0] = " << &ptr[0][0] <<'\n';
	cout << " ptr[1] = " << ptr[1] << '\n';
  	cout << " &ptr[1][0] = " << &ptr[1][0] <<'\n';  // (ptr[1] +0) или ((ptr +1)+0)
	for (int i = 0; i < n; i++)
	   delete [] ptr[i];			// удаление строк
	delete [] ptr;				// удаление массива указателей
}

